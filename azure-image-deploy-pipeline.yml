# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

resources:
  - repo: self

trigger:
  - main

variables:
- group: Project
- name: baseBuildImageTag
  value: '$(baseImageTagPrefix)-$(baseBuildImageVersion)'
- name: baseDeployImageTag
  value: '$(baseImageTagPrefix)-$(baseDeployImageVersion)'
- name: baseLatestImageTag
  value: '$(baseImageTagPrefix)-$(globalLatestImageTag)'

stages:
- stage: Build
  displayName: 'CI Stage: Integrate base image'
  jobs:
    - job: IntegrateBaseImage
      displayName: 'Integrate Inoversity Library base image'
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: Docker@2
        displayName: 'Build & push`$(imageName)` image to CR'
        inputs:
          containerRegistry: '$(containerRegistryServiceConnectionName)'
          repository: '$(imageName)'
          command: 'buildAndPush'
          Dockerfile: '$(baseImageDockerfileName)'
          tags: |
            $(baseBuildImageTag)
            $(baseLatestImageTag)

    - job: CreateConfigArtifact
      displayName: 'Create configuration artifact'
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: CopyFiles@2
        displayName: 'Copy config template.'
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)'
          contents: '**/global_configuration_template.json' 
          targetFolder: '$(Build.StagingDirectory)'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish config as pipeline artifact'
        inputs:
          path: '$(Build.StagingDirectory)'
          artifactName: '$(configTemplateArtifactName)'
          artifactType: 'pipeline'

- stage: CD_Development
  displayName: 'CD Stage: Development'
  variables:
  - group: Development
  - name: devImageTagPrefix
    value: 'dev'
  - name: devImageTag
    value: '$(devImageTagPrefix)-$(Build.BuildId)'
  - name: devLatestImageTag
    value: '$(devImageTagPrefix)-$(globalLatestImageTag)'

  jobs:
  - template: ./azure_image_deploy_jobs_template.yaml
    parameters:
      environment: Development
      environmentAlias: dev
      baseDeployImageTag: '$(baseDeployImageTag)'

- stage: CD_Testing
  displayName: 'CD Stage: Testing'
  variables:
  - group: Testing
  - name: testImageTagSuffix
    value: 'test'
  - name: testImageTag
    value: '$(testImageTagSuffix)-$(Build.BuildId)'
  - name: testLatestImageTag
    value: '$(testImageTagSuffix)-$(globalLatestImageTag)'

  jobs:
  - template: ./azure_image_deploy_jobs_template.yaml
    parameters:
      environment: Testing
      environmentAlias: test
      baseDeployImageTag: '$(baseDeployImageTag)'
      postBuild:
        - task: AzureRmWebAppDeployment@4
          displayName: 'Deploy App to Testing Environment'
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: '$(webAppAzureSubscription)'
            appType: 'webAppContainer'
            WebAppName: 'InoversityLibrary'
            DockerNamespace: '$(containerRegistryLoginServer)'
            DockerRepository: '$(imageName)'
            DockerImageTag: '$(testImageTag)'
