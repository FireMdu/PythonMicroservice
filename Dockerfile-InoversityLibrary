# syntax=docker/dockerfile:1

FROM python:3.9-slim

WORKDIR /app

COPY requirements.txt requirements.txt

# and populate "ocbcinst.ini" as this is where ODBC driver config sits
ENV ACCEPT_EULA=Y
RUN apt-get update && apt-get install -y --no-install-recommends \
        unixodbc \
        unixodbc-dev \
        freetds-dev \
        freetds-bin \
        tdsodbc \
        dos2unix \
        --reinstall build-essential -y \
    && echo "[FreeTDS]\n\
        Description = FreeTDS Driver\n\
        Driver = /usr/lib/x86_64-linux-gnu/odbc/libtdsodbc.so\n\
        Setup = /usr/lib/x86_64-linux-gnu/odbc/libtdsS.so" >> /etc/odbcinst.ini

# install Microsoft SQL Server requirements
RUN apt-get update -y && apt-get install -y --no-install-recommends  \
      curl  \
      gcc  \
      g++  \
      gnupg \
    && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
    && curl https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list \
    && apt-get update -y \
    && apt-get install -y --no-install-recommends --allow-unauthenticated  \
        msodbcsql17 \
        mssql-tools \
    && echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bash_profile \
    && echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc \
    && apt-get update \
    && apt-get -y clean all

RUN pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt \
    && apt-get remove -y gcc && apt-get -y autoremove

COPY . .

RUN chmod +x ./entry_point.sh

RUN ["dos2unix", "entry_point.sh"]

CMD [ "./entry_point.sh"]
